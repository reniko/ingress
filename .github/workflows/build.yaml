name: Build and Publish Caddy Image

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'  # Weekly build
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write  # Allow creating release
  packages: write  # Needed for publishing to GHCR
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install Go
        uses: actions/setup-go@v5
    
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Extract latest Caddy version
        id: caddy_version
        run: echo "CADDY_VERSION=$(curl -s https://api.github.com/repos/caddyserver/caddy/releases/latest | jq -r .tag_name)" >> $GITHUB_ENV

      - name: Get latest plugin versions
        id: plugin_versions
        run: |
          echo "DESEC_VERSION=$(git ls-remote --tags --sort=-v:refname https://github.com/caddy-dns/desec.git | grep -o 'refs/tags/.*' | sed 's/refs\/tags\///' | sed 's/\^{}//' | head -1)" >> $GITHUB_ENV
          echo "CORAZA_VERSION=$(git ls-remote --tags --sort=-v:refname https://github.com/corazawaf/coraza-caddy.git | grep -o 'refs/tags/.*' | sed 's/refs\/tags\///' | sed 's/\^{}//' | head -1)" >> $GITHUB_ENV
          echo "RATELIMIT_VERSION=$(git ls-remote --tags --sort=-v:refname https://github.com/mholt/caddy-ratelimit.git | grep -o 'refs/tags/.*' | sed 's/refs\/tags\///' | sed 's/\^{}//' | head -1)" >> $GITHUB_ENV
          echo "SECURITY_VERSION=$(git ls-remote --tags --sort=-v:refname https://github.com/greenpau/caddy-security.git | grep -o 'refs/tags/.*' | sed 's/refs\/tags\///' | sed 's/\^{}//' | head -1)" >> $GITHUB_ENV
          echo "GEOIP_VERSION=$(git ls-remote --tags --sort=-v:refname https://github.com/porech/caddy-maxmind-geolocation.git | grep -o 'refs/tags/.*' | sed 's/refs\/tags\///' | sed 's/\^{}//' | head -1)" >> $GITHUB_ENV

      - name: Get Current Date
        id: date
        run: echo "DATE=$(date +'%Y.%m%d')" >> $GITHUB_ENV

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          LATEST_TAG=$(git tag --list "1.${{ env.DATE }}.*" --sort=-v:refname | head -n 1)
          echo "Latest tag: $LATEST_TAG"
          if [[ -z "$LATEST_TAG" ]]; then
            echo "BUILD_NUM=1" >> $GITHUB_ENV
          else
            LAST_BUILD_NUM=$(echo "$LATEST_TAG" | awk -F. '{print $NF}')
            NEW_BUILD_NUM=$((LAST_BUILD_NUM + 1))
            echo "BUILD_NUM=$NEW_BUILD_NUM" >> $GITHUB_ENV
          fi

      - name: Set Version
        id: set_version
        run: echo "VERSION=1.${{ env.DATE }}.${{ env.BUILD_NUM }}" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build --no-cache \
            --build-arg CADDY_VERSION=${{ env.CADDY_VERSION }} \
            -t ghcr.io/${{ github.repository_owner }}/custom-caddy:${{ env.VERSION }} \
            -t ghcr.io/${{ github.repository_owner }}/custom-caddy:latest .

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/custom-caddy:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/custom-caddy:latest

      - name: Generate Changelog
        id: changelog
        run: |
          echo "### Changelog" > changelog.md
          echo "- Built with Caddy ${{ env.CADDY_VERSION }}" >> changelog.md
          echo "- Plugins:" >> changelog.md
          echo "  - deSEC: ${{ env.BUNNY_VERSION }}" >> changelog.md
          echo "  - Coraza: ${{ env.CORAZA_VERSION }}" >> changelog.md
          echo "  - Rate Limit: ${{ env.RATELIMIT_VERSION }}" >> changelog.md
          echo "  - Security: ${{ env.SECURITY_VERSION }}" >> changelog.md
          echo "  - Maxmind Geo IP: ${{ env.GEOIP_VERSION }}" >> changelog.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Caddy Build ${{ env.VERSION }}
          body_path: changelog.md
